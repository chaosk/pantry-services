services:
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    env_file:
      - /defaults.env
      - ../../stack.env
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: false
      WATCHTOWER_SCHEDULE: 0 0 2 * * *
      WATCHTOWER_NOTIFICATION_REPORT: true
      WATCHTOWER_NOTIFICATION_TEMPLATE: >
        {{- if .Report -}} 
          {{- with .Report -}} 
            {{- if ( .Updated ) -}} 
        {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed 
              {{- range .Updated}} 
        - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}} 
              {{- end -}} 
              {{- range .Fresh}} 
        - {{.Name}} ({{.ImageName}}): {{.State}} 
            {{- end -}} 
            {{- range .Skipped}} 
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}} 
            {{- end -}} 
            {{- range .Failed}} 
        - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}} 
            {{- end -}} 
            {{- end -}} 
          {{- end -}} 
        {{- end -}}
      WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL}
    networks:
      - gotify
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
networks:
  gotify:
    external: true
