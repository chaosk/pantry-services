version: "3.4"
services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
  db:
    image: docker.io/library/postgres:15
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.entrypoints=websecure"
      - "traefik.http.routers.paperless.tls=true"
      - "traefik.http.routers.paperless.rule=Host(`paperless.${DOMAIN_NAME}`)"
      - "traefik.http.routers.paperless.middlewares=chain-forwardauth@docker"
      - "traefik.http.services.webserver-paperless.loadbalancer.server.port=8000"
    networks:
      - traefik
      - default
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - $DATA_DIR/paperless/consume:/usr/src/paperless/consume
      - $DATA_DIR/paperless/export:/usr/src/paperless/export
    environment:
      USERMAP_UID: 1029
      USERMAP_GID: 65536
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      PAPERLESS_OCR_LANGUAGES: pol
      PAPERLESS_TIME_ZONE: Europe/London
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
      PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
      PAPERLESS_URL: https://paperless.${DOMAIN_NAME}
volumes:
  data:
  media:
  pgdata:
  redisdata:
networks:
  traefik:
    external: true
  default: