services:
  miniflux:
    image: miniflux/miniflux:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      - RUN_MIGRATIONS=1
      - OAUTH2_PROVIDER=oidc
      - OAUTH2_REDIRECT_URL=https://miniflux.${DOMAIN_NAME}/oauth2/oidc/callback
      - OAUTH2_OIDC_DISCOVERY_ENDPOINT=https://auth.${DOMAIN_NAME}/application/o/miniflux/
      - OAUTH2_USER_CREATION=1
    env_file:
      - /defaults.env
      - ../../stack.env
    networks:
      - default
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.miniflux.entrypoints=websecure"
      - "traefik.http.routers.miniflux.rule=Host(`miniflux.${DOMAIN_NAME}`)"
      - "traefik.http.routers.miniflux.tls=true"
      - "traefik.http.routers.miniflux.middlewares=chain-noauth@docker"
      - "traefik.http.routers.miniflux.service=miniflux-svc"
      - "traefik.http.services.miniflux-svc.loadbalancer.server.port=8080"
  db:
    image: postgres:15
    env_file:
      - /defaults.env
      - ../../stack.env
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
volumes:
  miniflux-db:
networks:
  traefik:
    external: true
  default:
