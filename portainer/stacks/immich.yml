services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:release
    volumes:
      - $SHARE_DIR/photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - redis
      - postgres
    env_file:
      - /defaults.env
      - ../../stack.env
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=postgres
      - DB_USERNAME=${IMMICH_DB_USER}
      - DB_PASSWORD=${IMMICH_DB_PASS}
      - DB_DATABASE_NAME=${IMMICH_DB}
      - REDIS_HOSTNAME=redis
    networks:
      - default
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.entrypoints=websecure"
      - "traefik.http.routers.immich.rule=Host(`photos.${DOMAIN_NAME}`)"
      - "traefik.http.routers.immich.tls=true"
      - "traefik.http.routers.immich.middlewares=chain-noauth@docker"
      - "traefik.http.routers.immich.service=immich-svc"
      - "traefik.http.services.immich-svc.loadbalancer.server.port=3001"
    restart: unless-stopped
  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:release
    volumes:
      - $SHARE_DIR/photos:/usr/src/app/upload
      - $DATA_DIR/immich/model-cache:/cache
    environment:
      - NODE_ENV=production
      - DB_HOSTNAME=postgres
      - DB_USERNAME=${IMMICH_DB_USER}
      - DB_PASSWORD=${IMMICH_DB_PASS}
      - DB_DATABASE_NAME=${IMMICH_DB}
    env_file:
      - /defaults.env
    restart: unless-stopped
  redis:
    image: library/redis:6.2-alpine@sha256:84882e87b54734154586e5f8abd4dce69fe7311315e2fc6d67c29614c8de2672
    volumes:
      - redisdata:/data
    restart: always
  postgres:
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_USER: ${IMMICH_DB_USER}
      POSTGRES_PASSWORD: ${IMMICH_DB_PASS}
      POSTGRES_DB: ${IMMICH_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
volumes:
  pgdata:
  redisdata:
networks:
  traefik:
    external: true
